/*
 * AWSAPICallViaCloudTrail
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SessionIssuer struct for SessionIssuer
type SessionIssuer struct {
	AccountId string `json:"accountId"`
	PrincipalId string `json:"principalId"`
	Type string `json:"type"`
	Arn string `json:"arn"`
	UserName string `json:"userName"`
}

// NewSessionIssuer instantiates a new SessionIssuer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionIssuer(accountId string, principalId string, type_ string, arn string, userName string, ) *SessionIssuer {
	this := SessionIssuer{}
	this.AccountId = accountId
	this.PrincipalId = principalId
	this.Type = type_
	this.Arn = arn
	this.UserName = userName
	return &this
}

// NewSessionIssuerWithDefaults instantiates a new SessionIssuer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionIssuerWithDefaults() *SessionIssuer {
	this := SessionIssuer{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *SessionIssuer) GetAccountId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SessionIssuer) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SessionIssuer) SetAccountId(v string) {
	o.AccountId = v
}

// GetPrincipalId returns the PrincipalId field value
func (o *SessionIssuer) GetPrincipalId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PrincipalId
}

// GetPrincipalIdOk returns a tuple with the PrincipalId field value
// and a boolean to check if the value has been set.
func (o *SessionIssuer) GetPrincipalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PrincipalId, true
}

// SetPrincipalId sets field value
func (o *SessionIssuer) SetPrincipalId(v string) {
	o.PrincipalId = v
}

// GetType returns the Type field value
func (o *SessionIssuer) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SessionIssuer) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SessionIssuer) SetType(v string) {
	o.Type = v
}

// GetArn returns the Arn field value
func (o *SessionIssuer) GetArn() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Arn
}

// GetArnOk returns a tuple with the Arn field value
// and a boolean to check if the value has been set.
func (o *SessionIssuer) GetArnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Arn, true
}

// SetArn sets field value
func (o *SessionIssuer) SetArn(v string) {
	o.Arn = v
}

// GetUserName returns the UserName field value
func (o *SessionIssuer) GetUserName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *SessionIssuer) GetUserNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *SessionIssuer) SetUserName(v string) {
	o.UserName = v
}

func (o SessionIssuer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["principalId"] = o.PrincipalId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["arn"] = o.Arn
	}
	if true {
		toSerialize["userName"] = o.UserName
	}
	return json.Marshal(toSerialize)
}

type NullableSessionIssuer struct {
	value *SessionIssuer
	isSet bool
}

func (v NullableSessionIssuer) Get() *SessionIssuer {
	return v.value
}

func (v *NullableSessionIssuer) Set(val *SessionIssuer) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionIssuer) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionIssuer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionIssuer(val *SessionIssuer) *NullableSessionIssuer {
	return &NullableSessionIssuer{value: val, isSet: true}
}

func (v NullableSessionIssuer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionIssuer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


