/*
 * AWSAPICallViaCloudTrail
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserIdentity struct for UserIdentity
type UserIdentity struct {
	SessionContext SessionContext `json:"sessionContext"`
	AccessKeyId string `json:"accessKeyId"`
	AccountId string `json:"accountId"`
	PrincipalId string `json:"principalId"`
	Type string `json:"type"`
	Arn string `json:"arn"`
	InvokedBy *string `json:"invokedBy,omitempty"`
}

// NewUserIdentity instantiates a new UserIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserIdentity(sessionContext SessionContext, accessKeyId string, accountId string, principalId string, type_ string, arn string, ) *UserIdentity {
	this := UserIdentity{}
	this.SessionContext = sessionContext
	this.AccessKeyId = accessKeyId
	this.AccountId = accountId
	this.PrincipalId = principalId
	this.Type = type_
	this.Arn = arn
	return &this
}

// NewUserIdentityWithDefaults instantiates a new UserIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserIdentityWithDefaults() *UserIdentity {
	this := UserIdentity{}
	return &this
}

// GetSessionContext returns the SessionContext field value
func (o *UserIdentity) GetSessionContext() SessionContext {
	if o == nil  {
		var ret SessionContext
		return ret
	}

	return o.SessionContext
}

// GetSessionContextOk returns a tuple with the SessionContext field value
// and a boolean to check if the value has been set.
func (o *UserIdentity) GetSessionContextOk() (*SessionContext, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SessionContext, true
}

// SetSessionContext sets field value
func (o *UserIdentity) SetSessionContext(v SessionContext) {
	o.SessionContext = v
}

// GetAccessKeyId returns the AccessKeyId field value
func (o *UserIdentity) GetAccessKeyId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value
// and a boolean to check if the value has been set.
func (o *UserIdentity) GetAccessKeyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessKeyId, true
}

// SetAccessKeyId sets field value
func (o *UserIdentity) SetAccessKeyId(v string) {
	o.AccessKeyId = v
}

// GetAccountId returns the AccountId field value
func (o *UserIdentity) GetAccountId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *UserIdentity) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *UserIdentity) SetAccountId(v string) {
	o.AccountId = v
}

// GetPrincipalId returns the PrincipalId field value
func (o *UserIdentity) GetPrincipalId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PrincipalId
}

// GetPrincipalIdOk returns a tuple with the PrincipalId field value
// and a boolean to check if the value has been set.
func (o *UserIdentity) GetPrincipalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PrincipalId, true
}

// SetPrincipalId sets field value
func (o *UserIdentity) SetPrincipalId(v string) {
	o.PrincipalId = v
}

// GetType returns the Type field value
func (o *UserIdentity) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UserIdentity) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *UserIdentity) SetType(v string) {
	o.Type = v
}

// GetArn returns the Arn field value
func (o *UserIdentity) GetArn() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Arn
}

// GetArnOk returns a tuple with the Arn field value
// and a boolean to check if the value has been set.
func (o *UserIdentity) GetArnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Arn, true
}

// SetArn sets field value
func (o *UserIdentity) SetArn(v string) {
	o.Arn = v
}

// GetInvokedBy returns the InvokedBy field value if set, zero value otherwise.
func (o *UserIdentity) GetInvokedBy() string {
	if o == nil || o.InvokedBy == nil {
		var ret string
		return ret
	}
	return *o.InvokedBy
}

// GetInvokedByOk returns a tuple with the InvokedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIdentity) GetInvokedByOk() (*string, bool) {
	if o == nil || o.InvokedBy == nil {
		return nil, false
	}
	return o.InvokedBy, true
}

// HasInvokedBy returns a boolean if a field has been set.
func (o *UserIdentity) HasInvokedBy() bool {
	if o != nil && o.InvokedBy != nil {
		return true
	}

	return false
}

// SetInvokedBy gets a reference to the given string and assigns it to the InvokedBy field.
func (o *UserIdentity) SetInvokedBy(v string) {
	o.InvokedBy = &v
}

func (o UserIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sessionContext"] = o.SessionContext
	}
	if true {
		toSerialize["accessKeyId"] = o.AccessKeyId
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["principalId"] = o.PrincipalId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["arn"] = o.Arn
	}
	if o.InvokedBy != nil {
		toSerialize["invokedBy"] = o.InvokedBy
	}
	return json.Marshal(toSerialize)
}

type NullableUserIdentity struct {
	value *UserIdentity
	isSet bool
}

func (v NullableUserIdentity) Get() *UserIdentity {
	return v.value
}

func (v *NullableUserIdentity) Set(val *UserIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableUserIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableUserIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserIdentity(val *UserIdentity) *NullableUserIdentity {
	return &NullableUserIdentity{value: val, isSet: true}
}

func (v NullableUserIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


